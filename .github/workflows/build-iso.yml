name: Build NixOS Akkoma Server ISO

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Manueller Start möglich

jobs:
  build-iso-x86:
    runs-on: ubuntu-latest
    name: Build ISO (x86_64)
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Nix
      uses: cachix/install-nix-action@v23
      with:
        nix_path: nixpkgs=channel:nixos-23.11
        extra_nix_config: |
          experimental-features = nix-command flakes
          max-jobs = auto
          cores = 0
          gc-keep-outputs = true
          gc-keep-derivations = true
          
    # Cachix Cache (optional - entfernt für bessere Kompatibilität)
    # - name: Setup Cachix Cache
    #   uses: cachix/cachix-action@v12
    #   with:
    #     name: nix-community
    #     authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        
    - name: Build ISO Image (x86_64)
      run: |
        echo "=== Building NixOS ISO (x86_64) with Akkoma Config Files ==="
        nix-build '<nixpkgs/nixos>' \
          -A config.system.build.isoImage \
          -I nixos-config=./iso-image.nix \
          --out-link result-iso-x86 \
          --max-jobs auto \
          --cores 0
          
        echo "=== x86_64 ISO Build completed ==="
        ls -la result-iso-x86/iso/
        
    # QCOW2 Build (entfernt - fokussiert auf ISO zuerst)
    # - name: Build QCOW2 Image
    #   run: |
    #     echo "=== Building QCOW2 Image for Cloud Deployment ==="
    #     nix-build '<nixpkgs/nixos>' \
    #       -A config.system.build.qcow2Image \
    #       -I nixos-config=./configuration.nix \
    #       --out-link result-qcow2 \
    #       --max-jobs auto \
    #       --cores 0
    #       
    #     echo "=== QCOW2 Build completed ==="
    #     ls -la result-qcow2/
        
    - name: Upload x86_64 ISO Artifact
      uses: actions/upload-artifact@v4
      with:
        name: nixos-akkoma-iso-x86_64
        path: result-iso-x86/iso/*.iso
        retention-days: 30

  build-iso-arm:
    runs-on: ubuntu-latest
    name: Build ISO (ARM64)
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Nix
      uses: cachix/install-nix-action@v23
      with:
        nix_path: nixpkgs=channel:nixos-23.11
        extra_nix_config: |
          experimental-features = nix-command flakes
          max-jobs = auto
          cores = 0
          gc-keep-outputs = true
          gc-keep-derivations = true
          
    - name: Build ISO Image (ARM64)
      run: |
        echo "=== Building NixOS ISO (ARM64) with Akkoma Config Files ==="
        nix-build '<nixpkgs/nixos>' \
          -A config.system.build.isoImage \
          -I nixos-config=./iso-image-arm.nix \
          --out-link result-iso-arm \
          --max-jobs auto \
          --cores 0
          
        echo "=== ARM64 ISO Build completed ==="
        ls -la result-iso-arm/iso/
        
    - name: Upload ARM64 ISO Artifact
      uses: actions/upload-artifact@v4
      with:
        name: nixos-akkoma-iso-arm64
        path: result-iso-arm/iso/*.iso
        retention-days: 30
        
    # QCOW2 Upload (entfernt - fokussiert auf ISO zuerst)
    # - name: Upload QCOW2 Artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: nixos-akkoma-qcow2
    #     path: result-qcow2/*.qcow2
    #     retention-days: 30
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          result-iso-x86/iso/*.iso
          result-iso-arm/iso/*.iso
        generate_release_notes: true
        draft: false
        prerelease: false
